mode: crud
name: 'Permissions to use a specific s3 bucket and dynamo table'
read:
- "arn:aws:dynamodb:*:${aws_account}:table/{$tf_backend_dynamodb_table_name}"
- "arn:aws:s3:::${tf_backend_s3_bucket}"
- "arn:aws:s3:::${tf_backend_s3_bucket}/*"
- "arn:aws:cloudformation:${AWS_REGION}::stack/${project_prefix}-*"
list:
- "arn:aws:dynamodb:*:${aws_account}:table/{$tf_backend_dynamodb_table_name}"
- "arn:aws:s3:::${tf_backend_s3_bucket}"
- "arn:aws:s3:::${tf_backend_s3_bucket}/*"
- "arn:aws:cloudformation:${AWS_REGION}::stack/${project_prefix}-*"
permissions-management:
- ''
# Actions that do not support resource constraints
wildcard-only:
  single-actions: # standalone actions
  - ''
  # Service-wide - like 's3' or 'ec2'
  service-read:
  - ''
  service-write:
  - ''
  service-list:
  - ''
  service-tagging:
  - ''
  service-permissions-management:
  - ''
# Skip resource constraint requirements by listing actions here.
skip-resource-constraints:
  - ''
# Exclude actions from the output by specifying them here. Accepts wildcards, like kms:Delete*
exclude-actions:
  - 'organizations:*'
sts:
  assume-role:
    - ''
  assume-role-with-saml:
    - ''
  assume-role-with-web-identity:
    - ''
