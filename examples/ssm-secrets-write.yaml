mode: crud
name: ''
read:
- 'arn:aws:secretsmanager:${AWS_REGION}:${aws_account}:secret:${project_prefix}-*'
- "arn:aws:ssm:${AWS_REGION}:${aws_account}:parameter/${project_prefix}/*"
write:
- 'arn:aws:secretsmanager:${AWS_REGION}:${aws_account}:secret:${project_prefix}-*'
- "arn:aws:ssm:${AWS_REGION}:${aws_account}:parameter/${project_prefix}/*"
list:
- 'arn:aws:secretsmanager:${AWS_REGION}:${aws_account}:secret:${project_prefix}-*'
- "arn:aws:ssm:${AWS_REGION}:${aws_account}:parameter/${project_prefix}/*"
tagging:
- 'arn:aws:secretsmanager:${AWS_REGION}:${aws_account}:secret:${project_prefix}-*'
- "arn:aws:ssm:${AWS_REGION}:${aws_account}:parameter/${project_prefix}/*"
permissions-management:
- ''
# Actions that do not support resource constraints
wildcard-only:
  single-actions: # standalone actions
  - ''
  # Service-wide - like 's3' or 'ec2'
  service-read:
  - 'ssm'
  service-write:
  - ''
  service-list:
  - ''
  service-tagging:
  - ''
  service-permissions-management:
  - ''
# Skip resource constraint requirements by listing actions here.
skip-resource-constraints:
  - 'ssm:DescribeParameters'
# Exclude actions from the output by specifying them here. Accepts wildcards, like kms:Delete*
exclude-actions:
- ''
# If this policy needs to include an AssumeRole action
sts:
  assume-role:
    - ''
  assume-role-with-saml:
    - ''
  assume-role-with-web-identity:
    - ''
